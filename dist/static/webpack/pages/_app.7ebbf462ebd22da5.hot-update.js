"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/assets/shared/components/store/slice/authSlice/index.ts":
/*!*********************************************************************!*\
  !*** ./src/assets/shared/components/store/slice/authSlice/index.ts ***!
  \*********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToken: function() { return /* binding */ addToken; },\n/* harmony export */   getMe: function() { return /* binding */ getMe; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   selectUser: function() { return /* binding */ selectUser; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nconst initialState = {\n    user: \"\",\n    isLogin: false,\n    auth_token: null,\n    loading: false,\n    error: \"\",\n    userData: {}\n};\n// export const signup = createAsyncThunk(\"auth/register\", async ({ username, password, email }: { username: string; password: string; email: string }, thunkAPI) => {\n//     // const data = {\n//     //     username: \"\",\n//     //     email: \"\",\n//     //     password: \"\",\n//     // };\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/meeting-api/v1/auth/users`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ username, email, password }),\n//     });\n//     let dataChange = await response.json();\n//     if (response.status === 200) {\n//         localStorage.setItem(\"token\", dataChange.auth_token);\n//         return dataChange;\n//     } else {\n//         return thunkAPI.rejectWithValue(dataChange);\n//     }\n// });\n// export const login = createAsyncThunk(\"auth/login\", async (data: string) => {\n//     return await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/token/login`, {\n//         mode: \"no-cors\",\n//         method: \"POST\",\n//         headers: {\n//             \"Content-Type\": \"application/x-www-form-urlencoded\",\n//         },\n//         body: data,\n//     }).then((res) => res);\n// });\nconst login = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"auth/login\", async (param, thunkAPI)=>{\n    let { username, password } = param;\n    // const data = {\n    //     username: \"\",\n    //     password: \"\",\n    // };\n    const response = await fetch(\"\".concat(\"http://127.0.0.1:8000\", \"/auth/token/login\"), {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n    });\n    let dataChange = await response.json();\n    console.log(\"response\", dataChange);\n    if (response.status === 200) {\n        localStorage.setItem(\"userToken\", dataChange.auth_token);\n        return dataChange;\n    } else {\n        return thunkAPI.rejectWithValue(dataChange);\n    }\n});\n// export const login = createAsyncThunk(\"auth/login\", async (body, thunkAPI) => {\n//     // const data = {\n//     //     username: \"\",\n//     //     password: \"\",\n//     // };\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/token/login`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//             Authorization: localStorage.getItem(\"userToken\"),\n//         },\n//         body: JSON.stringify(body),\n//     });\n//     return await response.json();\n// });\n// export const logout = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/token/login`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//         },\n//     });\n//     let dataChange = await response.json();\n//     console.log(\"response\", dataChange);\n//     if (response.status === 200) {\n//         localStorage.removeItem(\"userToken\", dataChange.auth_token);\n//         return dataChange;\n//     } else {\n//         return thunkAPI.rejectWithValue(dataChange);\n//     }\n// });\n// export const getMe = createAsyncThunk(\"auth/me\", async function () {\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/meeting-api/v1/uset_by_token`).then((res) => res.json());\n//     return response;\n// });\nconst getMe = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"auth/me\", async (_, thunkAPI)=>{\n    const response = await fetch(\"\".concat(\"http://127.0.0.1:8000\", \"/meeting-api/v1/uset_by_token\"), {\n        method: \"POST\",\n        headers: {\n            // \"Content-Type\": \"application/json\",\n            Authorization: laddToken\n        }\n    });\n    return response;\n});\nconst authSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        addToken: (state)=>{\n            state.auth_token = localStorage.getItem(\"userToken\");\n        },\n        addUser: (state)=>{\n            state.user = localStorage.getItem(\"user\");\n        }\n    },\n    extraReducers: (builder)=>{\n        // builder.addCase(signup.fulfilled, (state, action) => {\n        //     // state.userData = action.payload;\n        //     console.log(action);\n        // });\n        // builder.addCase(signup.rejected, (state, action) => {\n        //     console.log(action);\n        // });\n        // builder.addCase(signup.pending, (state, action) => {\n        //     // console.log(action);\n        // });\n        builder.addCase(login.fulfilled, (state, action)=>{\n            state.isLogin = true;\n        });\n        builder.addCase(login.rejected, (state, action)=>{\n            console.log(action);\n            state.isLogin = false;\n        });\n        builder.addCase(login.pending, (state, action)=>{\n            // console.log(action);\n            state.isLogin = false;\n        });\n        builder.addCase(getMe.fulfilled, (state, action)=>{\n            state.userData = action.payload;\n            state.loading = false;\n            state.error = \"\";\n        });\n        // builder.addCase(getMe.pending, (state) => {\n        //     state.loading = true;\n        //     state.error = \"\";\n        // });\n        builder.addCase(getMe.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = \"\";\n        // state.error = action.error.message;\n        });\n    }\n});\nconst { addToken } = authSlice.actions;\n// export const selectEvent = (state: RootState) => state.auth.user;\nconst selectUser = (state)=>state.auth.userData;\n/* harmony default export */ __webpack_exports__[\"default\"] = (authSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXNzZXRzL3NoYXJlZC9jb21wb25lbnRzL3N0b3JlL3NsaWNlL2F1dGhTbGljZS9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFpRTtBQWFqRSxNQUFNRSxlQUFxQjtJQUN2QkMsTUFBTTtJQUNOQyxTQUFTO0lBQ1RDLFlBQVk7SUFDWkMsU0FBUztJQUNUQyxPQUFPO0lBQ1BDLFVBQVUsQ0FBQztBQUNmO0FBRUEsc0tBQXNLO0FBQ3RLLHdCQUF3QjtBQUN4QiwyQkFBMkI7QUFDM0Isd0JBQXdCO0FBQ3hCLDJCQUEyQjtBQUMzQixZQUFZO0FBQ1oscUdBQXFHO0FBQ3JHLDBCQUEwQjtBQUMxQixxQkFBcUI7QUFDckIsMENBQTBDO0FBQzFDLGtEQUFrRDtBQUNsRCxhQUFhO0FBQ2IsK0RBQStEO0FBQy9ELFVBQVU7QUFDViw4Q0FBOEM7QUFFOUMscUNBQXFDO0FBQ3JDLGdFQUFnRTtBQUNoRSw2QkFBNkI7QUFDN0IsZUFBZTtBQUNmLHVEQUF1RDtBQUN2RCxRQUFRO0FBQ1IsTUFBTTtBQUVOLGdGQUFnRjtBQUNoRixrRkFBa0Y7QUFDbEYsMkJBQTJCO0FBQzNCLDBCQUEwQjtBQUMxQixxQkFBcUI7QUFDckIsbUVBQW1FO0FBQ25FLGFBQWE7QUFDYixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCLE1BQU07QUFFQyxNQUFNQyxRQUFRVCxrRUFBZ0JBLENBQUMsY0FBYyxjQUF1RVU7UUFBaEUsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQTBDO0lBQ3JILGlCQUFpQjtJQUNqQixvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLEtBQUs7SUFDTCxNQUFNQyxXQUFXLE1BQU1DLE1BQU0sR0FBbUMsT0FBaENDLHVCQUErQixFQUFDLHNCQUFvQjtRQUNoRkcsUUFBUTtRQUNSQyxTQUFTO1lBQ0xDLFFBQVE7WUFDUixnQkFBZ0I7UUFDcEI7UUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQUVaO1lBQVVDO1FBQVM7SUFDOUM7SUFDQSxJQUFJWSxhQUFh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QUFFLEdBQUdILFVBQVVlLE9BQU8sQ0FBQztBQUU5QyxvRUFBb0U7QUFDN0QsTUFBTUMsYUFBYSxDQUFDWixRQUFxQkEsTUFBTWEsSUFBSSxDQUFDN0MsUUFBUSxDQUFDO0FBRXBFLCtEQUFlNEIsVUFBVWtCLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXNzZXRzL3NoYXJlZC9jb21wb25lbnRzL3N0b3JlL3NsaWNlL2F1dGhTbGljZS9pbmRleC50cz8yNzczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFzeW5jVGh1bmssIGNyZWF0ZVNsaWNlIH0gZnJvbSBcIkByZWR1eGpzL3Rvb2xraXRcIjtcclxuaW1wb3J0IHsgUm9vdFN0YXRlIH0gZnJvbSBcIi4uLy4uXCI7XHJcbmltcG9ydCB7IHN0YXQgfSBmcm9tIFwiZnNcIjtcclxuXHJcbmludGVyZmFjZSB0eXBlIHtcclxuICAgIHVzZXI6IHN0cmluZyB8IG51bGw7XHJcbiAgICBpc0xvZ2luOiBib29sZWFuO1xyXG4gICAgYXV0aF90b2tlbjogc3RyaW5nIHwgbnVsbDtcclxuICAgIGxvYWRpbmc6IGJvb2xlYW47XHJcbiAgICBlcnJvcjogc3RyaW5nO1xyXG4gICAgdXNlckRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT47XHJcbn1cclxuXHJcbmNvbnN0IGluaXRpYWxTdGF0ZTogdHlwZSA9IHtcclxuICAgIHVzZXI6IFwiXCIsXHJcbiAgICBpc0xvZ2luOiBmYWxzZSxcclxuICAgIGF1dGhfdG9rZW46IG51bGwsXHJcbiAgICBsb2FkaW5nOiBmYWxzZSxcclxuICAgIGVycm9yOiBcIlwiLFxyXG4gICAgdXNlckRhdGE6IHt9LFxyXG59O1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IHNpZ251cCA9IGNyZWF0ZUFzeW5jVGh1bmsoXCJhdXRoL3JlZ2lzdGVyXCIsIGFzeW5jICh7IHVzZXJuYW1lLCBwYXNzd29yZCwgZW1haWwgfTogeyB1c2VybmFtZTogc3RyaW5nOyBwYXNzd29yZDogc3RyaW5nOyBlbWFpbDogc3RyaW5nIH0sIHRodW5rQVBJKSA9PiB7XHJcbi8vICAgICAvLyBjb25zdCBkYXRhID0ge1xyXG4vLyAgICAgLy8gICAgIHVzZXJuYW1lOiBcIlwiLFxyXG4vLyAgICAgLy8gICAgIGVtYWlsOiBcIlwiLFxyXG4vLyAgICAgLy8gICAgIHBhc3N3b3JkOiBcIlwiLFxyXG4vLyAgICAgLy8gfTtcclxuLy8gICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTH0vbWVldGluZy1hcGkvdjEvYXV0aC91c2Vyc2AsIHtcclxuLy8gICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgICAgICAgIGhlYWRlcnM6IHtcclxuLy8gICAgICAgICAgICAgQWNjZXB0OiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuLy8gICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbi8vICAgICAgICAgfSxcclxuLy8gICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHVzZXJuYW1lLCBlbWFpbCwgcGFzc3dvcmQgfSksXHJcbi8vICAgICB9KTtcclxuLy8gICAgIGxldCBkYXRhQ2hhbmdlID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuLy8gICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xyXG4vLyAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidG9rZW5cIiwgZGF0YUNoYW5nZS5hdXRoX3Rva2VuKTtcclxuLy8gICAgICAgICByZXR1cm4gZGF0YUNoYW5nZTtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgcmV0dXJuIHRodW5rQVBJLnJlamVjdFdpdGhWYWx1ZShkYXRhQ2hhbmdlKTtcclxuLy8gICAgIH1cclxuLy8gfSk7XHJcblxyXG4vLyBleHBvcnQgY29uc3QgbG9naW4gPSBjcmVhdGVBc3luY1RodW5rKFwiYXV0aC9sb2dpblwiLCBhc3luYyAoZGF0YTogc3RyaW5nKSA9PiB7XHJcbi8vICAgICByZXR1cm4gYXdhaXQgZmV0Y2goYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTH0vYXV0aC90b2tlbi9sb2dpbmAsIHtcclxuLy8gICAgICAgICBtb2RlOiBcIm5vLWNvcnNcIixcclxuLy8gICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4vLyAgICAgICAgIGhlYWRlcnM6IHtcclxuLy8gICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIixcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgICAgIGJvZHk6IGRhdGEsXHJcbi8vICAgICB9KS50aGVuKChyZXMpID0+IHJlcyk7XHJcbi8vIH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGxvZ2luID0gY3JlYXRlQXN5bmNUaHVuayhcImF1dGgvbG9naW5cIiwgYXN5bmMgKHsgdXNlcm5hbWUsIHBhc3N3b3JkIH06IHsgdXNlcm5hbWU6IHN0cmluZzsgcGFzc3dvcmQ6IHN0cmluZyB9LCB0aHVua0FQSSkgPT4ge1xyXG4gICAgLy8gY29uc3QgZGF0YSA9IHtcclxuICAgIC8vICAgICB1c2VybmFtZTogXCJcIixcclxuICAgIC8vICAgICBwYXNzd29yZDogXCJcIixcclxuICAgIC8vIH07XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkx9L2F1dGgvdG9rZW4vbG9naW5gLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyB1c2VybmFtZSwgcGFzc3dvcmQgfSksXHJcbiAgICB9KTtcclxuICAgIGxldCBkYXRhQ2hhbmdlID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgY29uc29sZS5sb2coXCJyZXNwb25zZVwiLCBkYXRhQ2hhbmdlKTtcclxuXHJcbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInVzZXJUb2tlblwiLCBkYXRhQ2hhbmdlLmF1dGhfdG9rZW4pO1xyXG4gICAgICAgIHJldHVybiBkYXRhQ2hhbmdlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gdGh1bmtBUEkucmVqZWN0V2l0aFZhbHVlKGRhdGFDaGFuZ2UpO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBsb2dpbiA9IGNyZWF0ZUFzeW5jVGh1bmsoXCJhdXRoL2xvZ2luXCIsIGFzeW5jIChib2R5LCB0aHVua0FQSSkgPT4ge1xyXG4vLyAgICAgLy8gY29uc3QgZGF0YSA9IHtcclxuLy8gICAgIC8vICAgICB1c2VybmFtZTogXCJcIixcclxuLy8gICAgIC8vICAgICBwYXNzd29yZDogXCJcIixcclxuLy8gICAgIC8vIH07XHJcbi8vICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkx9L2F1dGgvdG9rZW4vbG9naW5gLCB7XHJcbi8vICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuLy8gICAgICAgICBoZWFkZXJzOiB7XHJcbi8vICAgICAgICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbi8vICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4vLyAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJUb2tlblwiKSxcclxuLy8gICAgICAgICB9LFxyXG4vLyAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGJvZHkpLFxyXG4vLyAgICAgfSk7XHJcbi8vICAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4vLyB9KTtcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBsb2dvdXQgPSBjcmVhdGVBc3luY1RodW5rKFwiYXV0aC9sb2dvdXRcIiwgYXN5bmMgKF8sIHRodW5rQVBJKSA9PiB7XHJcbi8vICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkx9L2F1dGgvdG9rZW4vbG9naW5gLCB7XHJcbi8vICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuLy8gICAgICAgICBoZWFkZXJzOiB7XHJcbi8vICAgICAgICAgICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbi8vICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4vLyAgICAgICAgIH0sXHJcbi8vICAgICB9KTtcclxuLy8gICAgIGxldCBkYXRhQ2hhbmdlID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4vLyAgICAgY29uc29sZS5sb2coXCJyZXNwb25zZVwiLCBkYXRhQ2hhbmdlKTtcclxuXHJcbi8vICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcclxuLy8gICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcInVzZXJUb2tlblwiLCBkYXRhQ2hhbmdlLmF1dGhfdG9rZW4pO1xyXG4vLyAgICAgICAgIHJldHVybiBkYXRhQ2hhbmdlO1xyXG4vLyAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICByZXR1cm4gdGh1bmtBUEkucmVqZWN0V2l0aFZhbHVlKGRhdGFDaGFuZ2UpO1xyXG4vLyAgICAgfVxyXG4vLyB9KTtcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBnZXRNZSA9IGNyZWF0ZUFzeW5jVGh1bmsoXCJhdXRoL21lXCIsIGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuLy8gICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7cHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTH0vbWVldGluZy1hcGkvdjEvdXNldF9ieV90b2tlbmApLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSk7XHJcbi8vICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbi8vIH0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldE1lID0gY3JlYXRlQXN5bmNUaHVuayhcImF1dGgvbWVcIiwgYXN5bmMgKF8sIHRodW5rQVBJKSA9PiB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FQSV9VUkx9L21lZXRpbmctYXBpL3YxL3VzZXRfYnlfdG9rZW5gLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIC8vIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBsYWRkVG9rZW4sXHJcbiAgICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xyXG59KTtcclxuXHJcbmNvbnN0IGF1dGhTbGljZSA9IGNyZWF0ZVNsaWNlKHtcclxuICAgIG5hbWU6IFwiYXV0aFwiLFxyXG4gICAgaW5pdGlhbFN0YXRlLFxyXG4gICAgcmVkdWNlcnM6IHtcclxuICAgICAgICBhZGRUb2tlbjogKHN0YXRlKSA9PiB7XHJcbiAgICAgICAgICAgIHN0YXRlLmF1dGhfdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJUb2tlblwiKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGFkZFVzZXI6IChzdGF0ZSkgPT4ge1xyXG4gICAgICAgICAgICBzdGF0ZS51c2VyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VyXCIpO1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgZXh0cmFSZWR1Y2VyczogKGJ1aWxkZXIpID0+IHtcclxuICAgICAgICAvLyBidWlsZGVyLmFkZENhc2Uoc2lnbnVwLmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgICAvLyAgICAgLy8gc3RhdGUudXNlckRhdGEgPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgICAgICAvLyAgICAgY29uc29sZS5sb2coYWN0aW9uKTtcclxuICAgICAgICAvLyB9KTtcclxuICAgICAgICAvLyBidWlsZGVyLmFkZENhc2Uoc2lnbnVwLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhhY3Rpb24pO1xyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgICAgIC8vIGJ1aWxkZXIuYWRkQ2FzZShzaWdudXAucGVuZGluZywgKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgICAvLyAgICAgLy8gY29uc29sZS5sb2coYWN0aW9uKTtcclxuICAgICAgICAvLyB9KTtcclxuXHJcbiAgICAgICAgYnVpbGRlci5hZGRDYXNlKGxvZ2luLmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgICAgICAgc3RhdGUuaXNMb2dpbiA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYnVpbGRlci5hZGRDYXNlKGxvZ2luLnJlamVjdGVkLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhhY3Rpb24pO1xyXG4gICAgICAgICAgICBzdGF0ZS5pc0xvZ2luID0gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgYnVpbGRlci5hZGRDYXNlKGxvZ2luLnBlbmRpbmcsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGFjdGlvbik7XHJcbiAgICAgICAgICAgIHN0YXRlLmlzTG9naW4gPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgYnVpbGRlci5hZGRDYXNlKGdldE1lLmZ1bGZpbGxlZCwgKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuICAgICAgICAgICAgc3RhdGUudXNlckRhdGEgPSBhY3Rpb24ucGF5bG9hZDtcclxuICAgICAgICAgICAgc3RhdGUubG9hZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICBzdGF0ZS5lcnJvciA9IFwiXCI7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gYnVpbGRlci5hZGRDYXNlKGdldE1lLnBlbmRpbmcsIChzdGF0ZSkgPT4ge1xyXG4gICAgICAgIC8vICAgICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTtcclxuICAgICAgICAvLyAgICAgc3RhdGUuZXJyb3IgPSBcIlwiO1xyXG4gICAgICAgIC8vIH0pO1xyXG5cclxuICAgICAgICBidWlsZGVyLmFkZENhc2UoZ2V0TWUucmVqZWN0ZWQsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICAgICAgICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgc3RhdGUuZXJyb3IgPSBcIlwiO1xyXG4gICAgICAgICAgICAvLyBzdGF0ZS5lcnJvciA9IGFjdGlvbi5lcnJvci5tZXNzYWdlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxufSk7XHJcbmV4cG9ydCBjb25zdCB7IGFkZFRva2VuIH0gPSBhdXRoU2xpY2UuYWN0aW9ucztcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBzZWxlY3RFdmVudCA9IChzdGF0ZTogUm9vdFN0YXRlKSA9PiBzdGF0ZS5hdXRoLnVzZXI7XHJcbmV4cG9ydCBjb25zdCBzZWxlY3RVc2VyID0gKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmF1dGgudXNlckRhdGE7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhdXRoU2xpY2UucmVkdWNlcjtcclxuIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jVGh1bmsiLCJjcmVhdGVTbGljZSIsImluaXRpYWxTdGF0ZSIsInVzZXIiLCJpc0xvZ2luIiwiYXV0aF90b2tlbiIsImxvYWRpbmciLCJlcnJvciIsInVzZXJEYXRhIiwibG9naW4iLCJ0aHVua0FQSSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZXNwb25zZSIsImZldGNoIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJtZXRob2QiLCJoZWFkZXJzIiwiQWNjZXB0IiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhQ2hhbmdlIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJzdGF0dXMiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwicmVqZWN0V2l0aFZhbHVlIiwiZ2V0TWUiLCJfIiwiQXV0aG9yaXphdGlvbiIsImxhZGRUb2tlbiIsImF1dGhTbGljZSIsIm5hbWUiLCJyZWR1Y2VycyIsImFkZFRva2VuIiwic3RhdGUiLCJnZXRJdGVtIiwiYWRkVXNlciIsImV4dHJhUmVkdWNlcnMiLCJidWlsZGVyIiwiYWRkQ2FzZSIsImZ1bGZpbGxlZCIsImFjdGlvbiIsInJlamVjdGVkIiwicGVuZGluZyIsInBheWxvYWQiLCJhY3Rpb25zIiwic2VsZWN0VXNlciIsImF1dGgiLCJyZWR1Y2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/assets/shared/components/store/slice/authSlice/index.ts\n"));

/***/ })

});