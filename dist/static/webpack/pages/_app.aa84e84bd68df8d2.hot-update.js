"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/assets/shared/components/store/slice/authSlice/index.ts":
/*!*********************************************************************!*\
  !*** ./src/assets/shared/components/store/slice/authSlice/index.ts ***!
  \*********************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToken: function() { return /* binding */ addToken; },\n/* harmony export */   getMe: function() { return /* binding */ getMe; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   selectUser: function() { return /* binding */ selectUser; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nconst initialState = {\n    user: \"\",\n    isLogin: false,\n    auth_token: null,\n    loading: false,\n    error: \"\",\n    userData: {}\n};\n// export const signup = createAsyncThunk(\"auth/register\", async ({ username, password, email }: { username: string; password: string; email: string }, thunkAPI) => {\n//     // const data = {\n//     //     username: \"\",\n//     //     email: \"\",\n//     //     password: \"\",\n//     // };\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/meeting-api/v1/auth/users`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ username, email, password }),\n//     });\n//     let dataChange = await response.json();\n//     if (response.status === 200) {\n//         localStorage.setItem(\"token\", dataChange.auth_token);\n//         return dataChange;\n//     } else {\n//         return thunkAPI.rejectWithValue(dataChange);\n//     }\n// });\n// export const login = createAsyncThunk(\"auth/login\", async (data: string) => {\n//     return await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/token/login`, {\n//         mode: \"no-cors\",\n//         method: \"POST\",\n//         headers: {\n//             \"Content-Type\": \"application/x-www-form-urlencoded\",\n//         },\n//         body: data,\n//     }).then((res) => res);\n// });\nconst login = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"auth/login\", async (param, thunkAPI)=>{\n    let { username, password } = param;\n    // const data = {\n    //     username: \"\",\n    //     password: \"\",\n    // };\n    const response = await fetch(\"\".concat(\"http://127.0.0.1:8000\", \"/auth/token/login\"), {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"userToken\")\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n    });\n    let dataChange = await response.json();\n    console.log(\"response\", dataChange);\n    if (response.status === 200) {\n        localStorage.setItem(\"userToken\", dataChange.auth_token);\n        return dataChange;\n    } else {\n        return thunkAPI.rejectWithValue(dataChange);\n    }\n});\n// export const logout = createAsyncThunk(\"auth/logout\", async (_, thunkAPI) => {\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/token/login`, {\n//         method: \"POST\",\n//         headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\",\n//         },\n//     });\n//     let dataChange = await response.json();\n//     console.log(\"response\", dataChange);\n//     if (response.status === 200) {\n//         localStorage.removeItem(\"userToken\", dataChange.auth_token);\n//         return dataChange;\n//     } else {\n//         return thunkAPI.rejectWithValue(dataChange);\n//     }\n// });\n// export const getMe = createAsyncThunk(\"auth/me\", async function () {\n//     const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/meeting-api/v1/uset_by_token`).then((res) => res.json());\n//     return response;\n// });\nconst getMe = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createAsyncThunk)(\"auth/me\", async (_, thunkAPI)=>{\n    const response = await fetch(\"\".concat(\"http://127.0.0.1:8000\", \"/meeting-api/v1/uset_by_token\"), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem(\"userToken\")\n        }\n    });\n    return response;\n});\nconst authSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        addToken: (state)=>{\n            state.auth_token = localStorage.getItem(\"userToken\");\n        },\n        addUser: (state)=>{\n            state.user = localStorage.getItem(\"user\");\n        }\n    },\n    extraReducers: (builder)=>{\n        // builder.addCase(signup.fulfilled, (state, action) => {\n        //     // state.userData = action.payload;\n        //     console.log(action);\n        // });\n        // builder.addCase(signup.rejected, (state, action) => {\n        //     console.log(action);\n        // });\n        // builder.addCase(signup.pending, (state, action) => {\n        //     // console.log(action);\n        // });\n        builder.addCase(login.fulfilled, (state, action)=>{\n            state.isLogin = true;\n            state.auth_token = auth_token, state.user = user;\n        });\n        builder.addCase(login.rejected, (state, action)=>{\n            console.log(action);\n            state.isLogin = false;\n        });\n        builder.addCase(login.pending, (state, action)=>{\n            // console.log(action);\n            state.isLogin = false;\n        });\n        builder.addCase(getMe.fulfilled, (state, action)=>{\n            state.userData = action.payload;\n            state.loading = false;\n            state.error = \"\";\n        });\n        // builder.addCase(getMe.pending, (state) => {\n        //     state.loading = true;\n        //     state.error = \"\";\n        // });\n        builder.addCase(getMe.rejected, (state, action)=>{\n            state.loading = false;\n            state.error = \"\";\n        // state.error = action.error.message;\n        });\n    }\n});\nconst { addToken } = authSlice.actions;\n// export const selectEvent = (state: RootState) => state.auth.user;\nconst selectUser = (state)=>state.auth.userData;\n/* harmony default export */ __webpack_exports__[\"default\"] = (authSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/assets/shared/components/store/slice/authSlice/index.ts\n"));

/***/ })

});